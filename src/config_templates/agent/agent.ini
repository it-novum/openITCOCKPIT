[default]
#
# This is the configuration file for the openITCOCKPIT Monitoring Agent 3.x
# Notice: Empty values will not been ignored! If you want to disable an option like proxy comment it out!

#########################
#       Web Server      #
#########################

# Bind address of the build-in web server
# Use 0.0.0.0 to bind on all interfaces
address = {{bind_address}}

# Port of the Agents build-in web server
# Default port is 3333
port = {{bind_port}}

#########################
#   Security Settings   #
#########################

# Try to enable auto ssl mode for webserver
try-autossl = {{use_autossl}}

# File paths used to store autossl related files (default: /etc/openitcockpit-agent/):
# Leave this blank to use the default values
# Example: /etc/openitcockpit-agent/agent.csr
#autossl-csr-file =

# Example: /etc/openitcockpit-agent/agent.crt
#autossl-crt-file =

# Example: /etc/openitcockpit-agent/agent.key
#autossl-key-file =

# Example: /etc/openitcockpit-agent/server_ca.crt
#autossl-ca-file =

# If a certificate file is given, the agent will only be accessible through HTTPS
# Instead of messing around with self-signed certificates we recommend to use the autossl feature.
# Example: /etc/ssl/certs/ssl-cert-snakeoil.pem
{% if certfile is not empty %}
certfile = {{certfile}}
{% else %}
#certfile = /etc/ssl/certs/ssl-cert-snakeoil.pem
{% endif %}

# Private key file of the given TLS certificate
# Example: /etc/ssl/private/ssl-cert-snakeoil.key
{% if keyfile is not empty %}
keyfile = {{keyfile}}
{% else %}
#keyfile = /etc/ssl/private/ssl-cert-snakeoil.key
{% endif %}

# Enable remote read and write access to the current agent configuration (this file) and
# the customchecks config
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# ! WARNING: This could lead to remote code execution    !
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
config-update-mode = {{enable_remote_config_update}}

# Enable HTTP Basic Authentication
# Example: auth = user:password
{% if http_basic_auth_credentials is not empty %}
auth = {{http_basic_auth_credentials}}
{% else %}
#auth = user:password
{% endif %}

#########################
#        Checks         #
#########################

# Determines in seconds how often the agent will schedule all internal checks
interval = {{check_interval}}

# Remote Plugin Execution
# Path to config will where custom checks can be defined
# Comment to use the default value
#
# Linux: /etc/openitcockpit-agent/customchecks.ini
# Windows: C:\Program Files\it-novum\openitcockpit-agent\customchecks.ini
# macOS: /Applications/openitcockpit-agent/customchecks.ini
{% if customchecks_path is not empty %}
customchecks = {{customchecks_path}}
{% else %}
#customchecks = /etc/openitcockpit-agent/customchecks.ini
{% endif %}

#########################
# Enable/Disable checks #
#########################

# Enable CPU monitoring
cpustats = {{cpustats}}

# Enable memory monitoring
memory = {{memory}}

# Enable Swap monitoring
swap = {{swap}}

# Enable monitoring of running processes
processstats = {{processstats}}

# Enable monitoring of network interfaces
netstats = {{netstats}}

# Enable monitoring of the traffic (I/O) of network interfaces
netio = {{netio}}

# Enable disk usage monitoring
diskstats = {{diskstats}}

# Enable monitoring of disk I/O
diskio = {{diskio}}

# Enable monitoring of Systemd Services (Linux only)
systemdservices = {{systemdservices}}

# Enable monitoring of Launchd Services (macOS only)
launchdservices = {{launchdservices}}

# Enable monitoring of Windows Services (Windows only)
winservices = {{winservices}}

# Enable monitoring of Windows Event Log records (Windows only)
wineventlog = {{wineventlog}}

# Define comma separated windows event log log types
# Event Logs containing spaces needs to be single quotes: Security,'Sophos Cloud AD Sync'
wineventlog-logtypes = {{win_eventlog_types}}

# Enable monitoring of temperature and battery sensors
sensorstats = {{sensorstats}}

# Enable support to monitor Docker containers
# Known issues: Error response from daemon: client version 1.41 is too new. Maximum supported API version is 1.40
# Workaround: export DOCKER_API_VERSION=1.40
dockerstats = {{dockerstats}}

# Check KVMs through libvirt
# This requires to complie the openITCOCKPIT Monitoring Agent by yourself.
# Please see the Wiki for instructions: https://github.com/it-novum/openitcockpit-agent-go/wiki/Build-binary
libvirt = {{libvirt}}

# Enable logged in users check
userstats = {{userstats}}

#########################
#       Push mode       #
#########################

# By default openITCOCKPIT will pull check results from the openITCOCKPIT Agent.
# In a cloud environments or behind a NAT network it could become handy
# if the openITCOCKPIT Monitoring Agent will push the results to your openITCOCKPIT Server
[oitc]

# Enable Push Mode
enabled = {{enable_push_mode}}

# This option disables the webserver of the openITCOCKPIT Monitoring Agent when running in PUSH mode.
# When you also want to enable the Webserver even if the agent is running in PUSH mode we highly recommend
# to enable HTTP Basic Authentication and to use the certfile and keyfile options to enable HTTPS
enable-webserver = {{push_enable_webserver}}

# Address of your openITCOCKPIT Server where the Agent will push the results to
# Example: https://demo.openitcockpit.io
url = {{push_oitc_server_url}}

# Enable this option when your openITCOCKPIT server uses valid TLS certificates
# like from Let's Encrypt
verify-server-certificate = {{push_verify_server_certificate}}

# Timeout in seconds for the HTTP push client
timeout = {{push_timeout}}

# API-Key of your openITCOCKPIT Server
apikey = {{push_oitc_api_key}}

# Address of HTTP/HTTPS Proxy if required.
# Comment to disable
# Example: http://10.10.1.10:3128
{% if push_proxy_address is not empty %}
proxy = {{push_proxy_address}}
{% else %}
#proxy = http://10.10.1.10:3128
{% endif %}
